name: trello nestJS CD

on:
  workflow_dispatch:
  workflow_run:
    workflows: ['trello nestJS CD']
    types: [completed] # 완료 되었을 때
    branches: [CICD] # main 브랜치

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    runs-on: ubuntu-24.04

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master # SSH 접속 후 명령 실행을 위해 미리 정의 된 workflow를 불러와서 사용
        with:
          host: ${{ secrets.AWS_EC2_HOST }} # EC2 IP주소
          username: ${{ secrets.AWS_EC2_USERNAME }} # EC2 사용자 (Ubuntu OS 설치 시 기본값은 ubuntu)
          key: ${{ secrets.AWS_EC2_PEM_KEY }} # EC2 접속을 위한 pem 파일의 raw data
          port: ${{ secrets.AWS_EC2_PORT }} # EC2 접속을 위한 SSH 포트
          script: |

            # node, npm, yarn 명령어 사용을 위한 설정 (.bashrc 파일에 추가되어 있는 내용)
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

            # 프로젝트 폴더로 이동
            cd /home/ubuntu/trello-projecty


            git switch dev

            # 최신 소스 코드를 가져옴
            git pull

            # .env 파일 생성
            # ">" 는 생성 또는 덮어쓰기
            # ">>" 는 내용 덧붙이기
            echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" > .env
            echo "JWT_SECRET=${{ secrets.DB_HOST }}" >> .env
            echo "JWT_SECRET=${{ secrets.DB_PORT }}" >> .env
            echo "JWT_SECRET=${{ secrets.DB_USERNAME }}" >> .env
            echo "JWT_SECRET=${{ secrets.DB_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.DB_NAME }}" >> .env
            echo "JWT_SECRET=${{ secrets.DB_SYNC }}" >> .env
            echo "JWT_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}" >> .env
            echo "JWT_SECRET=${{ secrets.ACCESS_TOKEN_EXPIRES }}" >> .env
            echo "JWT_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}" >> .env
            echo "JWT_SECRET=${{ secrets.REFRESH_TOKEN_EXPIRES }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_MAX_CONNECTION }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_SERVICE }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_HOST }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_PORT }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_AUTH_PASS }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_AUTH_USER }}" >> .env
            echo "JWT_SECRET=${{ secrets.MAIL_BASE_URL }}" >> .env

            # 의존성 설치
             npm ci


             npm run build

            # PM2로 실행 중인 서버 중지 및 삭제
            pm2 delete trello-project

            # 서버를 PM2로 실행
            pm2 --name trello-project start dist/src/main.js

            # PM2 설정 저장 (선택사항, startup 설정을 해놨다면)
            pm2 save
